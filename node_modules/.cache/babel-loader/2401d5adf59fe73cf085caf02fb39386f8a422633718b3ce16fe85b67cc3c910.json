{"ast":null,"code":"var _jsxFileName = \"/Users/jisusingh/Downloads/tic_tac_toe_game/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './TicTacToe.css';\n\n// const TicTacToe = () => {\n//     const [board, setBoard] = useState(Array(9).fill(null));\n//     const [currentPlayer, setCurrentPlayer] = useState('X');\n//     const [winner, setWinner] = useState(null);\n\n//     const handleClick = (index) => {\n//         if (winner) return;\n\n//         if (board[index] === null) {\n//             const newBoard = [...board];\n//             newBoard[index] = currentPlayer;\n//             setBoard(newBoard);\n//             setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n//             checkForWinner();\n//         }\n//     }\n\n//     const checkForWinner = () => {\n//         const winningLines = [            [0, 1, 2],\n//             [3, 4, 5],\n//             [6, 7, 8],\n//             [0, 3, 6],\n//             [1, 4, 7],\n//             [2, 5, 8],\n//             [0, 4, 8],\n//             [2, 4, 6]\n//         ];\n\n//         for (let i = 0; i < winningLines.length; i++) {\n//             const [a, b, c] = winningLines[i];\n//             if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n//                 setWinner(board[a]);\n//                 return;\n//             }\n//         }\n\n//         if (board.every(cell => cell !== null)) {\n//             setWinner('tie');\n//         }\n//     }\n\n//     const renderSquare = (index) => {\n//         return (\n//             <button className=\"square\" onClick={() => handleClick(index)}>\n//                 {board[index]}\n//             </button>\n//         );\n//     }\n\n//     return (\n//         <div className=\"tic-tac-toe\">\n//             <div className=\"board\">\n//                 {renderSquare(0)}\n//                 {renderSquare(1)}\n//                 {renderSquare(2)}\n//                 {renderSquare(3)}\n//                 {renderSquare(4)}\n//                 {renderSquare(5)}\n//                 {renderSquare(6)}\n//                 {renderSquare(7)}\n//                 {renderSquare(8)}\n//             </div>\n//             <div className=\"status\">{winner ? `Winner: ${winner}` : `Current player: ${currentPlayer}`}</div>\n//         </div>\n//     );\n// }\n\n// export default TicTacToe;\n\nimport React, { useState } from 'react';\nimport './TicTacToe.css';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [winner, setWinner] = useState(null);\n  const [playerXWins, setPlayerXWins] = useState(0);\n  const [playerOWins, setPlayerOWins] = useState(0);\n  const handleClick = index => {\n    if (winner) return;\n    if (board[index] === null) {\n      const newBoard = [...board];\n      newBoard[index] = currentPlayer;\n      setBoard(newBoard);\n      setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n      checkForWinner();\n    }\n  };\n  const checkForWinner = () => {\n    const winningLines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < winningLines.length; i++) {\n      const [a, b, c] = winningLines[i];\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        setWinner(board[a]);\n        updateWinCount(board[a]);\n        return;\n      }\n    }\n    if (board.every(cell => cell !== null)) {\n      setWinner('tie');\n    }\n  };\n  const updateWinCount = winner => {\n    if (winner === 'X') {\n      setPlayerXWins(playerXWins + 1);\n    } else if (winner === 'O') {\n      setPlayerOWins(playerOWins + 1);\n    }\n  };\n  const renderSquare = index => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => handleClick(index),\n      children: board[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_bar\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"static\",\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              edge: \"start\",\n              color: \"inherit\",\n              \"aria-label\": \"menu\",\n              sx: {\n                mr: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              sx: {\n                flexGrow: 1\n              },\n              children: \"News\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2), renderSquare(3), renderSquare(4), renderSquare(5), renderSquare(6), renderSquare(7), renderSquare(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: winner ? winner === 'tie' ? 'It\\'s a tie!' : `Winner: ${winner}` : `Current player: ${currentPlayer}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n_s(TicTacToe, \"ubMa9vpaolCxThOVCIBOcTmhilg=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","AppBar","Box","Toolbar","Typography","Button","IconButton","MenuIcon","TicTacToe","board","setBoard","Array","fill","currentPlayer","setCurrentPlayer","winner","setWinner","playerXWins","setPlayerXWins","playerOWins","setPlayerOWins","handleClick","index","newBoard","checkForWinner","winningLines","i","length","a","b","c","updateWinCount","every","cell","renderSquare","flexGrow","mr"],"sources":["/Users/jisusingh/Downloads/tic_tac_toe_game/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './TicTacToe.css';\n\n// const TicTacToe = () => {\n//     const [board, setBoard] = useState(Array(9).fill(null));\n//     const [currentPlayer, setCurrentPlayer] = useState('X');\n//     const [winner, setWinner] = useState(null);\n\n//     const handleClick = (index) => {\n//         if (winner) return;\n\n//         if (board[index] === null) {\n//             const newBoard = [...board];\n//             newBoard[index] = currentPlayer;\n//             setBoard(newBoard);\n//             setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n//             checkForWinner();\n//         }\n//     }\n\n//     const checkForWinner = () => {\n//         const winningLines = [            [0, 1, 2],\n//             [3, 4, 5],\n//             [6, 7, 8],\n//             [0, 3, 6],\n//             [1, 4, 7],\n//             [2, 5, 8],\n//             [0, 4, 8],\n//             [2, 4, 6]\n//         ];\n\n//         for (let i = 0; i < winningLines.length; i++) {\n//             const [a, b, c] = winningLines[i];\n//             if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n//                 setWinner(board[a]);\n//                 return;\n//             }\n//         }\n\n//         if (board.every(cell => cell !== null)) {\n//             setWinner('tie');\n//         }\n//     }\n\n//     const renderSquare = (index) => {\n//         return (\n//             <button className=\"square\" onClick={() => handleClick(index)}>\n//                 {board[index]}\n//             </button>\n//         );\n//     }\n\n//     return (\n//         <div className=\"tic-tac-toe\">\n//             <div className=\"board\">\n//                 {renderSquare(0)}\n//                 {renderSquare(1)}\n//                 {renderSquare(2)}\n//                 {renderSquare(3)}\n//                 {renderSquare(4)}\n//                 {renderSquare(5)}\n//                 {renderSquare(6)}\n//                 {renderSquare(7)}\n//                 {renderSquare(8)}\n//             </div>\n//             <div className=\"status\">{winner ? `Winner: ${winner}` : `Current player: ${currentPlayer}`}</div>\n//         </div>\n//     );\n// }\n\n// export default TicTacToe;\n\n\n\n\n\nimport React, { useState } from 'react';\nimport './TicTacToe.css';\n\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n\nconst TicTacToe = () => {\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [currentPlayer, setCurrentPlayer] = useState('X');\n    const [winner, setWinner] = useState(null);\n    const [playerXWins, setPlayerXWins] = useState(0);\n    const [playerOWins, setPlayerOWins] = useState(0);\n\n    const handleClick = (index) => {\n        if (winner) return;\n\n        if (board[index] === null) {\n            const newBoard = [...board];\n            newBoard[index] = currentPlayer;\n            setBoard(newBoard);\n            setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n            checkForWinner();\n        }\n    }\n\n    const checkForWinner = () => {\n        const winningLines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n        ];\n\n        for (let i = 0; i < winningLines.length; i++) {\n            const [a, b, c] = winningLines[i];\n            if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n                setWinner(board[a]);\n                updateWinCount(board[a]);\n                return;\n            }\n        }\n\n        if (board.every(cell => cell !== null)) {\n            setWinner('tie');\n        }\n    }\n\n    const updateWinCount = (winner) => {\n        if (winner === 'X') {\n            setPlayerXWins(playerXWins + 1);\n        } else if (winner === 'O') {\n            setPlayerOWins(playerOWins + 1);\n        }\n    }\n\n    const renderSquare = (index) => {\n        return (\n            <button className=\"square\" onClick={() => handleClick(index)}>\n                {board[index]}\n            </button>\n        );\n    }\n\n    return (\n        \n        <div className=\"tic-tac-toe\">\n             <div className='app_bar'>\n            <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            News\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n            </div>\n            <div className=\"board\">\n                {renderSquare(0)}\n                {renderSquare(1)}\n                {renderSquare(2)}\n                {renderSquare(3)}\n                {renderSquare(4)}\n                {renderSquare(5)}\n                {renderSquare(6)}\n                {renderSquare(7)}\n                {renderSquare(8)}\n            </div>\n            <div className=\"status\">\n                {winner ? \n                    (winner === 'tie' ? 'It\\'s a tie!' : `Winner: ${winner}`) :\n                    `Current player: ${currentPlayer}`\n                }\n            </div>\n           \n        </div>\n    );\n}\n\nexport default TicTacToe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}