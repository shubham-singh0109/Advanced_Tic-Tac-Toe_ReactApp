{"ast":null,"code":"var _jsxFileName = \"/Users/jisusingh/Downloads/react-complete-guide/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [winner, setWinner] = useState(null);\n  const handleClick = index => {\n    if (winner) return;\n    if (board[index] === null) {\n      const newBoard = [...board];\n      newBoard[index] = currentPlayer;\n      setBoard(newBoard);\n      setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n      checkForWinner();\n    }\n  };\n  const checkForWinner = () => {\n    const winningLines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < winningLines.length; i++) {\n      const [a, b, c] = winningLines[i];\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        setWinner(board[a]);\n        return;\n      }\n    }\n    if (board.every(cell => cell !== null)) {\n      setWinner('tie');\n    }\n  };\n  const renderSquare = index => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => handleClick(index),\n      children: board[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2), renderSquare(3), renderSquare(4), renderSquare(5), renderSquare(6), renderSquare(7), renderSquare(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: winner ? `Winner: ${winner}` : `Current player: ${currentPlayer}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(TicTacToe, \"C0ImQmbVjO9s0jMbuE7sWhtLLWE=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","TicTacToe","board","setBoard","Array","fill","currentPlayer","setCurrentPlayer","winner","setWinner","handleClick","index","newBoard","checkForWinner","winningLines","i","length","a","b","c","every","cell","renderSquare"],"sources":["/Users/jisusingh/Downloads/react-complete-guide/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst TicTacToe = () => {\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [currentPlayer, setCurrentPlayer] = useState('X');\n    const [winner, setWinner] = useState(null);\n\n    const handleClick = (index) => {\n        if (winner) return;\n\n        if (board[index] === null) {\n            const newBoard = [...board];\n            newBoard[index] = currentPlayer;\n            setBoard(newBoard);\n            setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n            checkForWinner();\n        }\n    }\n\n    const checkForWinner = () => {\n        const winningLines = [            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n        ];\n\n        for (let i = 0; i < winningLines.length; i++) {\n            const [a, b, c] = winningLines[i];\n            if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n                setWinner(board[a]);\n                return;\n            }\n        }\n\n        if (board.every(cell => cell !== null)) {\n            setWinner('tie');\n        }\n    }\n\n    const renderSquare = (index) => {\n        return (\n            <button className=\"square\" onClick={() => handleClick(index)}>\n                {board[index]}\n            </button>\n        );\n    }\n\n    return (\n        <div className=\"tic-tac-toe\">\n            <div className=\"board\">\n                {renderSquare(0)}\n                {renderSquare(1)}\n                {renderSquare(2)}\n                {renderSquare(3)}\n                {renderSquare(4)}\n                {renderSquare(5)}\n                {renderSquare(6)}\n                {renderSquare(7)}\n                {renderSquare(8)}\n            </div>\n            <div className=\"status\">{winner ? `Winner: ${winner}` : `Current player: ${currentPlayer}`}</div>\n        </div>\n    );\n}\n\nexport default TicTacToe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}